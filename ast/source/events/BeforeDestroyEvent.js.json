{
  "type": "File",
  "start": 0,
  "end": 923,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 28,
      "column": 46
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 923,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 28,
        "column": 46
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 44,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 44
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 20,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 20
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 20,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 20
                },
                "identifierName": "Cancellable"
              },
              "name": "Cancellable"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 20,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 20
                },
                "identifierName": "Cancellable"
              },
              "name": "Cancellable"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 28,
          "end": 43,
          "loc": {
            "start": {
              "line": 1,
              "column": 28
            },
            "end": {
              "line": 1,
              "column": 43
            }
          },
          "extra": {
            "rawValue": "./Cancellable",
            "raw": "'./Cancellable'"
          },
          "value": "./Cancellable"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Event fired before an item is destroyed. Mostly used in a {@link View}.\n * This event allows the user to cancel the destruction of a Renderable. For example,\n * if a tab is closed this event will be fired and sent down the tree and subscribed\n * to by a view. The view can perform an async clean up task or display a confirm to the user\n * before actually destroying the Renderable.\n * @export\n * @see {@link Cancellable}\n * @class BeforeDestroyEvent\n * @extends {Cancellable<T>}\n * @template T The target type.\n * @example\n * class MyView {\n *   ugOnBeforeDestroy(e: BeforeDestroyEvent): void {\n *     e.wait(async () => {\n *       const confirmed = await this.confirmClose();\n *\n *       if (!confirmed) {\n *         e.cancel();\n *       }\n *     });\n *   }\n * }\n ",
            "start": 45,
            "end": 820,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 821,
        "end": 876,
        "loc": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 27,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 828,
          "end": 876,
          "loc": {
            "start": {
              "line": 26,
              "column": 7
            },
            "end": {
              "line": 27,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 834,
            "end": 852,
            "loc": {
              "start": {
                "line": 26,
                "column": 13
              },
              "end": {
                "line": 26,
                "column": 31
              },
              "identifierName": "BeforeDestroyEvent"
            },
            "name": "BeforeDestroyEvent",
            "leadingComments": null
          },
          "superClass": {
            "type": "Identifier",
            "start": 861,
            "end": 872,
            "loc": {
              "start": {
                "line": 26,
                "column": 40
              },
              "end": {
                "line": 26,
                "column": 51
              },
              "identifierName": "Cancellable"
            },
            "name": "Cancellable"
          },
          "body": {
            "type": "ClassBody",
            "start": 873,
            "end": 876,
            "loc": {
              "start": {
                "line": 26,
                "column": 52
              },
              "end": {
                "line": 27,
                "column": 1
              }
            },
            "body": [],
            "leadingComments": null,
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Event fired before an item is destroyed. Mostly used in a {@link View}.\n * This event allows the user to cancel the destruction of a Renderable. For example,\n * if a tab is closed this event will be fired and sent down the tree and subscribed\n * to by a view. The view can perform an async clean up task or display a confirm to the user\n * before actually destroying the Renderable.\n * @export\n * @see {@link Cancellable}\n * @class BeforeDestroyEvent\n * @extends {Cancellable<T>}\n * @template T The target type.\n * @example\n * class MyView {\n *   ugOnBeforeDestroy(e: BeforeDestroyEvent): void {\n *     e.wait(async () => {\n *       const confirmed = await this.confirmClose();\n *\n *       if (!confirmed) {\n *         e.cancel();\n *       }\n *     });\n *   }\n * }\n ",
              "start": 45,
              "end": 820,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 0
                },
                "end": {
                  "line": 25,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentLine",
              "value": "# sourceMappingURL=BeforeDestroyEvent.js.map",
              "start": 877,
              "end": 923,
              "loc": {
                "start": {
                  "line": 28,
                  "column": 0
                },
                "end": {
                  "line": 28,
                  "column": 46
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Event fired before an item is destroyed. Mostly used in a {@link View}.\n * This event allows the user to cancel the destruction of a Renderable. For example,\n * if a tab is closed this event will be fired and sent down the tree and subscribed\n * to by a view. The view can perform an async clean up task or display a confirm to the user\n * before actually destroying the Renderable.\n * @export\n * @see {@link Cancellable}\n * @class BeforeDestroyEvent\n * @extends {Cancellable<T>}\n * @template T The target type.\n * @example\n * class MyView {\n *   ugOnBeforeDestroy(e: BeforeDestroyEvent): void {\n *     e.wait(async () => {\n *       const confirmed = await this.confirmClose();\n *\n *       if (!confirmed) {\n *         e.cancel();\n *       }\n *     });\n *   }\n * }\n ",
            "start": 45,
            "end": 820,
            "loc": {
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 25,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentLine",
            "value": "# sourceMappingURL=BeforeDestroyEvent.js.map",
            "start": 877,
            "end": 923,
            "loc": {
              "start": {
                "line": 28,
                "column": 0
              },
              "end": {
                "line": 28,
                "column": 46
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Event fired before an item is destroyed. Mostly used in a {@link View}.\n * This event allows the user to cancel the destruction of a Renderable. For example,\n * if a tab is closed this event will be fired and sent down the tree and subscribed\n * to by a view. The view can perform an async clean up task or display a confirm to the user\n * before actually destroying the Renderable.\n * @export\n * @see {@link Cancellable}\n * @class BeforeDestroyEvent\n * @extends {Cancellable<T>}\n * @template T The target type.\n * @example\n * class MyView {\n *   ugOnBeforeDestroy(e: BeforeDestroyEvent): void {\n *     e.wait(async () => {\n *       const confirmed = await this.confirmClose();\n *\n *       if (!confirmed) {\n *         e.cancel();\n *       }\n *     });\n *   }\n * }\n ",
      "start": 45,
      "end": 820,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "# sourceMappingURL=BeforeDestroyEvent.js.map",
      "start": 877,
      "end": 923,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 46
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Cancellable",
      "start": 9,
      "end": 20,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 21,
      "end": 22,
      "loc": {
        "start": {
          "line": 1,
          "column": 21
        },
        "end": {
          "line": 1,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 23,
      "end": 27,
      "loc": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./Cancellable",
      "start": 28,
      "end": 43,
      "loc": {
        "start": {
          "line": 1,
          "column": 28
        },
        "end": {
          "line": 1,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 43,
      "end": 44,
      "loc": {
        "start": {
          "line": 1,
          "column": 43
        },
        "end": {
          "line": 1,
          "column": 44
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Event fired before an item is destroyed. Mostly used in a {@link View}.\n * This event allows the user to cancel the destruction of a Renderable. For example,\n * if a tab is closed this event will be fired and sent down the tree and subscribed\n * to by a view. The view can perform an async clean up task or display a confirm to the user\n * before actually destroying the Renderable.\n * @export\n * @see {@link Cancellable}\n * @class BeforeDestroyEvent\n * @extends {Cancellable<T>}\n * @template T The target type.\n * @example\n * class MyView {\n *   ugOnBeforeDestroy(e: BeforeDestroyEvent): void {\n *     e.wait(async () => {\n *       const confirmed = await this.confirmClose();\n *\n *       if (!confirmed) {\n *         e.cancel();\n *       }\n *     });\n *   }\n * }\n ",
      "start": 45,
      "end": 820,
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 25,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 821,
      "end": 827,
      "loc": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 26,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 828,
      "end": 833,
      "loc": {
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 26,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "BeforeDestroyEvent",
      "start": 834,
      "end": 852,
      "loc": {
        "start": {
          "line": 26,
          "column": 13
        },
        "end": {
          "line": 26,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "extends",
        "keyword": "extends",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "extends",
      "start": 853,
      "end": 860,
      "loc": {
        "start": {
          "line": 26,
          "column": 32
        },
        "end": {
          "line": 26,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Cancellable",
      "start": 861,
      "end": 872,
      "loc": {
        "start": {
          "line": 26,
          "column": 40
        },
        "end": {
          "line": 26,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 873,
      "end": 874,
      "loc": {
        "start": {
          "line": 26,
          "column": 52
        },
        "end": {
          "line": 26,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 875,
      "end": 876,
      "loc": {
        "start": {
          "line": 27,
          "column": 0
        },
        "end": {
          "line": 27,
          "column": 1
        }
      }
    },
    {
      "type": "CommentLine",
      "value": "# sourceMappingURL=BeforeDestroyEvent.js.map",
      "start": 877,
      "end": 923,
      "loc": {
        "start": {
          "line": 28,
          "column": 0
        },
        "end": {
          "line": 28,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 923,
      "end": 923,
      "loc": {
        "start": {
          "line": 28,
          "column": 46
        },
        "end": {
          "line": 28,
          "column": 46
        }
      }
    }
  ]
}